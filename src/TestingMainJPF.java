import java.util.ArrayList;
import java.util.List;

import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;


public class TestingMainJPF {
	static ScriptEngineManager mg;
	static ScriptEngine eg ;
	UserDetails user1;
	UserDetails user2;
	static List<UserDetails> users;
	static TestingMainJPF test;
public static void main(String args[]) throws ScriptException{
	test = new TestingMainJPF();
	testFunc(11);
	modifiedDemoMal(5,70);
}

public static void testFunc(int x){
	if(x>10){
		users = new ArrayList<UserDetails>();
		test.user1 = new UserDetails();
		test.user1.setUserName("ABC");
		test.user1.setUserLevel(3);
		test.user1.setUserPermission(true);
		users.add(test.user1);
		
		test.user2 = new UserDetails();
		test.user2.setUserName("XYZ");
		test.user2.setUserLevel(4);
		test.user2.setUserPermission(false);
		users.add(test.user2);
	}
}
public static void modifiedDemoMal(int x, int y) throws ScriptException{
	if(x<y || x < 100){
		test.executeMal(test.user1.getUserLevel(),2);
		test.executeMal(test.user2.getUserLevel(),2);
		}else{
			System.out.println(!true);
		}
}
public void executeMal(int userLevel, int minimumLevel){
	if(minimumLevel <= userLevel){
		if((userLevel == 3 || userLevel ==4 )){
		for(UserDetails user : users){
			if(user.getUserLevel() != userLevel)
			{
				
			}else{
				if(!user.isUserPermission()){
					user = null;
					System.gc();
					System.out.println("User deleted");
				}else{
					System.out.println("Old user name: "+user.getUserName());
					user.setUserName(null);
					System.out.println("New user name: "+user.getUserName());
				}
			}
		}
		}
	}
}
}
