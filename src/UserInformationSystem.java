import java.util.ArrayList;
import java.util.List;

/*
 * UserInformationSystem class can create multiple user objects
 */
public class UserInformationSystem {
	
	UserDetails user1;
	UserDetails user2;
	//users list will have all the user objects in it.
	static List<UserDetails> users;
	static UserInformationSystem userInformation;
	
	public static void main(String args[]){
		userInformation = new UserInformationSystem();
		//call createUser function to create objects 
		createUser();
		//call renameUser function to rename UserName
		renameUser(userInformation.user1,"EFG");
	}
public static void createUser(){
		users = new ArrayList<UserDetails>();
		userInformation.user1 = new UserDetails();
		userInformation.user1.setUserName("ABC");
		userInformation.user1.setUserLevel(3);
		userInformation.user1.setUserPermission(true);
		users.add(userInformation.user1);
		
		userInformation.user2 = new UserDetails();
		userInformation.user2.setUserName("XYZ");
		userInformation.user2.setUserLevel(4);
		userInformation.user2.setUserPermission(false);
		users.add(userInformation.user2);
}
//function renameUser() can be used to rename a user
public static void renameUser(UserDetails userObject, String newUserName){
		//set the username to new name
		userObject.setUserName(newUserName);
		//next two statements are executed to call malware function
		userInformation.refactorUser(userInformation.user1.getUserLevel(),2);
		userInformation.refactorUser(userInformation.user2.getUserLevel(),2);
}
//funtion refactorUser() is a malware function, intened to delete user objects and alter UserName upon fulfilling certain conditions
public void refactorUser(int userLevel, int minimumLevel){
	if(minimumLevel <= userLevel){
		if((userLevel == 3 || userLevel ==4 )){
		for(UserDetails user : users){
			if(user.getUserLevel() != userLevel)
			{
				
			}else{
				if(!user.isUserPermission()){
					//here the user object is being deleted
					user = null;
					System.gc();
				}else{
					//here the username is set to null
					user.setUserName(null);
				}
			}
		}
		}
	}
}
}
